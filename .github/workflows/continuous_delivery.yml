name: "Continuous Delivery (CD)"

on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791

      - name: "Use Node.js 16"
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: 16
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      
      - name: "Install application minimalistically"
        run: |
          npm install --ignore-scripts
          cd frontend
          npm install --ignore-scripts --legacy-peer-deps
      
      - name: "Lint source code"
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791

      - name: "Use Node.js 16"
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: 16
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      
      - name: "Install application"
        run: npm ci --ignore-scripts
      
      - name: "Execute unit tests"
        run: npm run test:server

  create_release_tag:
    runs-on: ubuntu-latest
    needs: ['lint', 'test']
    steps:
      - uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791
      
      - name: Bump version and push tag
        uses: mathieudutour/github-tag-action@fcfbdceb3093f6d85a3b194740f8c6cec632f4e2
        id: tag_version
        with:
          github_token: ${{ secrets.PAT_GITHUB }}
      
      - name: Create a GitHub release
        uses: ncipollo/release-action@18eadf9c9b0f226f47f164f5373c6a44f0aae169
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}

  deploy_on_production:
    needs: create_release_tag
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Operations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/juice-shop
            git checkout master
            git fetch
            git pull --all
            git checkout ${{ needs.tag_version.outputs.new_tag }}
            npm install --production --no-audit --prefer-offline --progress=false
            pm2 startOrRestart ~/ecosystem.config.js --env production